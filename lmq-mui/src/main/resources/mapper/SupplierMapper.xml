<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.SupplierMapper">
	<resultMap id="BaseResultMap" type="com.lmq.domain.Supplier">
		<id column="Id" jdbcType="INTEGER" property="id" />
		<result column="Name" jdbcType="VARCHAR" property="name" />
		<result column="Sid" jdbcType="INTEGER" property="sid" />
		<result column="Lid" jdbcType="INTEGER" property="lid" />
		<result column="Phone" jdbcType="VARCHAR" property="phone" />
		<result column="Province" jdbcType="VARCHAR"
			property="province" />
		<result column="City" jdbcType="VARCHAR" property="city" />
		<result column="District" jdbcType="VARCHAR"
			property="district" />
		<result column="Addres" jdbcType="VARCHAR" property="addres" />
		<result column="Balance" jdbcType="DOUBLE" property="balance" />
		<result column="freezemoney" jdbcType="DOUBLE"
			property="freezemoney" />
		<result column="Remark" jdbcType="VARCHAR" property="remark" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="async" jdbcType="INTEGER" property="async" />
		<result column="uid" jdbcType="VARCHAR" property="uid" />
		<result column="contacts" jdbcType="VARCHAR"
			property="contacts" />
		<result column=" acronymname" jdbcType="VARCHAR"
			property=" acronymname" />
		<result column="englishname" jdbcType="VARCHAR"
			property="englishname" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, Name, Sid, Lid, Phone, Province, City, District,
		Addres, Balance,
		freezemoney,
		Remark, time, status, async, uid, user1,
		user2, user3, user4, user5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		*
		from supplier
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from supplier
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.lmq.domain.Supplier">
		insert into supplier (Id,
		Name, Sid,
		Lid, Phone, Province,
		City, District, Addres,
		Balance,
		freezemoney, Remark,
		time, status, async,
		uid, user1, user2,
		user3,
		user4, user5
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{sid,jdbcType=INTEGER},
		#{lid,jdbcType=INTEGER},
		#{phone,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR},
		#{addres,jdbcType=VARCHAR},
		#{balance,jdbcType=DOUBLE},
		#{freezemoney,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
		#{async,jdbcType=INTEGER},
		#{uid,jdbcType=VARCHAR},
		#{user1,jdbcType=VARCHAR}, #{user2,jdbcType=VARCHAR},
		#{user3,jdbcType=VARCHAR}, #{user4,jdbcType=VARCHAR},
		#{user5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.lmq.domain.Supplier">
		insert into supplier
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="name != null">
				Name,
			</if>
			<if test="sid != null">
				Sid,
			</if>
			<if test="lid != null">
				Lid,
			</if>
			<if test="phone != null">
				Phone,
			</if>
			<if test="province != null">
				Province,
			</if>
			<if test="city != null">
				City,
			</if>
			<if test="district != null">
				District,
			</if>
			<if test="addres != null">
				Addres,
			</if>
			<if test="balance != null">
				Balance,
			</if>
			<if test="freezemoney != null">
				freezemoney,
			</if>
			<if test="remark != null">
				Remark,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="async != null">
				async,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
			<if test="acronymname != null">
				acronymname,
			</if>
			<if test="englishname != null">
				englishname,
			</if>
			<if test="contacts != null">
				contacts,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="lid != null">
				#{lid,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				#{district,jdbcType=VARCHAR},
			</if>
			<if test="addres != null">
				#{addres,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				#{balance,jdbcType=DOUBLE},
			</if>
			<if test="freezemoney != null">
				#{freezemoney,jdbcType=DOUBLE},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				#{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
			<if test="acronymname != null">
				#{acronymname,jdbcType=VARCHAR},
			</if>
			<if test="englishname != null">
				#{englishname,jdbcType=VARCHAR},
			</if>
			<if test="contacts != null">
				#{contacts,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lmq.domain.Supplier">
		update supplier
		<set>
			<if test="name != null">
				Name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				Sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="lid != null">
				Lid = #{lid,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				Phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				Province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				City = #{city,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				District = #{district,jdbcType=VARCHAR},
			</if>
			<if test="addres != null">
				Addres = #{addres,jdbcType=VARCHAR},
			</if>
			<if test="balance != null">
				Balance = #{balance,jdbcType=DOUBLE},
			</if>
			<if test="freezemoney != null">
				freezemoney = #{freezemoney,jdbcType=DOUBLE},
			</if>
			<if test="remark != null">
				Remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				async = #{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				user1 = #{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				user2 = #{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				user3 = #{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				user4 = #{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				user5 = #{user5,jdbcType=VARCHAR},
			</if>
			<if test="contacts != null">
				contacts=#{contacts,jdbcType=VARCHAR},
			</if>
			<if test="acronymname != null">
				acronymname=#{acronymname,jdbcType=VARCHAR},
			</if>
			<if test="englishname != null">
				englishname=#{englishname,jdbcType=VARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lmq.domain.Supplier">
		update supplier
		set Name = #{name,jdbcType=VARCHAR},
		Sid =
		#{sid,jdbcType=INTEGER},
		Lid = #{lid,jdbcType=INTEGER},
		Phone =
		#{phone,jdbcType=VARCHAR},
		Province = #{province,jdbcType=VARCHAR},
		City = #{city,jdbcType=VARCHAR},
		District =
		#{district,jdbcType=VARCHAR},
		Addres = #{addres,jdbcType=VARCHAR},
		Balance = #{balance,jdbcType=DOUBLE},
		freezemoney =
		#{freezemoney,jdbcType=DOUBLE},
		Remark = #{remark,jdbcType=VARCHAR},
		time = #{time,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		async = #{async,jdbcType=INTEGER},
		uid = #{uid,jdbcType=VARCHAR},
		user1
		= #{user1,jdbcType=VARCHAR},
		user2 = #{user2,jdbcType=VARCHAR},
		user3 =
		#{user3,jdbcType=VARCHAR},
		user4 = #{user4,jdbcType=VARCHAR},
		user5 =
		#{user5,jdbcType=VARCHAR}
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<resultMap type="com.lmq.domain.SupplierClassify"
		id="ResultMapClassify">
		<id property="acronymname" column="acronymname" />
		<result property="id" column="id" />
		<collection property="list" column="{id=id,acronymname=acronymname}"
			ofType="com.lmq.domain.Supplier" select="queryByIdAllSupplier1">
		</collection>
	</resultMap>
	<select id="queryByIdAllSupplier" resultMap="ResultMapClassify">
		SELECT DISTINCT `acronymname`,sid as id FROM
		supplier WHERE sid=#{sid} and status=0
	</select>
	<select id="queryByIdAllSupplier1" resultMap="BaseResultMap">
		SELECT * FROM
		supplier WHERE sid=#{id} AND acronymname=#{acronymname} and status=0
	</select>

  
    <update id="updateBalanceById" parameterType="com.lmq.domain.Customer">
  update supplier set Balance=Balance-#{balance,jdbcType=DOUBLE} where Id = #{id,jdbcType=INTEGER};
  </update>
</mapper>