<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.CustomerrechargeMapper">
	<resultMap id="BaseResultMap"
		type="com.lmq.domain.Customerrecharge">
		<id column="Id" jdbcType="INTEGER" property="id" />
		<result column="Time" jdbcType="TIMESTAMP" property="time" />
		<result column="money" jdbcType="DOUBLE" property="money" />
		<result column="cid" jdbcType="INTEGER" property="cid" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="async" jdbcType="INTEGER" property="async" />
		<result column="uid" jdbcType="VARCHAR" property="uid" />
		<result column="user1" jdbcType="VARCHAR" property="user1" />
		<result column="user2" jdbcType="VARCHAR" property="user2" />
		<result column="user3" jdbcType="VARCHAR" property="user3" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
		<result column="cname" jdbcType="VARCHAR" property="cname" />
		<result column="pname" jdbcType="VARCHAR" property="pname" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, Time, money, cid, status, async, uid, user1, user2,
		user3, user4,
		user5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from customerrecharge
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from customerrecharge
		where Id =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.lmq.domain.Customerrecharge">
		insert into customerrecharge (Id, Time, money,
		cid,
		status, async,
		uid, user1, user2,
		user3, user4, user5
		)
		values
		(#{id,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP},
		#{money,jdbcType=DOUBLE},
		#{cid,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER}, #{async,jdbcType=INTEGER},
		#{uid,jdbcType=VARCHAR}, #{user1,jdbcType=VARCHAR},
		#{user2,jdbcType=VARCHAR},
		#{user3,jdbcType=VARCHAR},
		#{user4,jdbcType=VARCHAR}, #{user5,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.lmq.domain.Customerrecharge">
		insert into customerrecharge
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="time == null">
				Time,
			</if>
			<if test="money != null">
				money,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="async != null">
				async,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="time == null">
				now(),
			</if>
			<if test="money != null">
				#{money,jdbcType=DOUBLE},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				#{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lmq.domain.Customerrecharge">
		update customerrecharge
		<set>
			<if test="time != null">
				Time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="money != null">
				money = #{money,jdbcType=DOUBLE},
			</if>
			<if test="cid != null">
				cid = #{cid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				async = #{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				user1 = #{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				user2 = #{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				user3 = #{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				user4 = #{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				user5 = #{user5,jdbcType=VARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lmq.domain.Customerrecharge">
		update customerrecharge
		set Time =
		#{time,jdbcType=TIMESTAMP},
		money = #{money,jdbcType=DOUBLE},
		cid =
		#{cid,jdbcType=INTEGER},
		status = #{status,jdbcType=INTEGER},
		async =
		#{async,jdbcType=INTEGER},
		uid = #{uid,jdbcType=VARCHAR},
		user1 =
		#{user1,jdbcType=VARCHAR},
		user2 = #{user2,jdbcType=VARCHAR},
		user3 =
		#{user3,jdbcType=VARCHAR},
		user4 = #{user4,jdbcType=VARCHAR},
		user5 =
		#{user5,jdbcType=VARCHAR}
		where Id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getTimeNum" resultType="String">
		SELECT
		MAX(RIGHT(`user2`,12))AS maxNub FROM
		`customerrecharge`
		WHERE `user2`
		LIKE
		CONCAT('%',#{uid},YEAR(NOW()),MONTH(NOW()),SUBSTR(NOW(),9,2),'%')
	</select>

	<select id="queryList" resultMap="BaseResultMap">
		SELECT cc.`Id`,cc.`user2`,cc.`money`,c.`Name` AS cname,cc.`user1`,cc.`status` FROM
		`customerrecharge` cc INNER JOIN `customer` c ON cc.`cid`=c.`Id`
		WHERE
		cc.`status`!=1 AND DATE(cc.`user1`) BETWEEN
		#{startTime} AND
		#{endTime}
		AND
		(
		cc.`user2` LIKE
		CONCAT('%',#{filtrate},'%') OR
		c.`name`
		LIKE
		CONCAT('%',#{filtrate},'%') ) ORDER BY cc.`time` DESC
		<!-- <if test=""> and DATE(s.`time`) BETWEEN '2018-11-14' AND '2018-11-14' 
			</if> <if test=""> and s.`SalesIndentNub` LIKE '%1%' OR st.`name` LIKE '%1%' 
			</if> -->
	</select>
	
	<update id="updateStatusById">
		update customerrecharge set `status`=#{status} where
		Id=#{id}
	</update>
	
	<select id="queryInfoById" resultMap="BaseResultMap" >
		SELECT cc.*,c.`Name` as cname,p.Name AS pname FROM customerrecharge cc INNER JOIN customer c ON cc.`cid`=c.`Id` AND cc.`Id`=#{id}
		INNER JOIN paytype p ON cc.`user3`=p.`Id`
	</select>
</mapper>