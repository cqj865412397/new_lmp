<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.StandardinstanceMapper">
  <resultMap id="BaseResultMap" type="com.lmq.domain.Standardinstance">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="Gid" jdbcType="INTEGER" property="gid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="async" jdbcType="INTEGER" property="async" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="user1" jdbcType="VARCHAR" property="user1" />
    <result column="user2" jdbcType="VARCHAR" property="user2" />
    <result column="user3" jdbcType="VARCHAR" property="user3" />
    <result column="user4" jdbcType="VARCHAR" property="user4" />
    <result column="user5" jdbcType="VARCHAR" property="user5" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, Name, sid, Gid, time, status, async, uid, user1, user2, user3, user4, user5
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from standardinstance
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from standardinstance
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lmq.domain.Standardinstance" useGeneratedKeys="true" keyProperty="id">
    insert into standardinstance (Id, Name, sid, 
      Gid, time, status, 
      async, uid, user1, 
      user2, user3, user4, 
      user5)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER}, 
      #{gid,jdbcType=INTEGER}, NOW(), #{status,jdbcType=INTEGER}, 
      #{async,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{user1,jdbcType=VARCHAR}, 
      #{user2,jdbcType=VARCHAR}, #{user3,jdbcType=VARCHAR}, #{user4,jdbcType=VARCHAR}, 
      #{user5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lmq.domain.Standardinstance">
    insert into standardinstance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="gid != null">
        Gid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="async != null">
        async,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="user1 != null">
        user1,
      </if>
      <if test="user2 != null">
        user2,
      </if>
      <if test="user3 != null">
        user3,
      </if>
      <if test="user4 != null">
        user4,
      </if>
      <if test="user5 != null">
        user5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="user1 != null">
        #{user1,jdbcType=VARCHAR},
      </if>
      <if test="user2 != null">
        #{user2,jdbcType=VARCHAR},
      </if>
      <if test="user3 != null">
        #{user3,jdbcType=VARCHAR},
      </if>
      <if test="user4 != null">
        #{user4,jdbcType=VARCHAR},
      </if>
      <if test="user5 != null">
        #{user5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmq.domain.Standardinstance">
    update standardinstance
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="gid != null">
        Gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        async = #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="user1 != null">
        user1 = #{user1,jdbcType=VARCHAR},
      </if>
      <if test="user2 != null">
        user2 = #{user2,jdbcType=VARCHAR},
      </if>
      <if test="user3 != null">
        user3 = #{user3,jdbcType=VARCHAR},
      </if>
      <if test="user4 != null">
        user4 = #{user4,jdbcType=VARCHAR},
      </if>
      <if test="user5 != null">
        user5 = #{user5,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmq.domain.Standardinstance">
    update standardinstance
    set Name = #{name,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=INTEGER},
      Gid = #{gid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      async = #{async,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR},
      user1 = #{user1,jdbcType=VARCHAR},
      user2 = #{user2,jdbcType=VARCHAR},
      user3 = #{user3,jdbcType=VARCHAR},
      user4 = #{user4,jdbcType=VARCHAR},
      user5 = #{user5,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询非自定义规格值 -->
  <select id="querystandardInstanceBySid" resultType="com.lmq.domain.Standardinstance">
  		SELECT * FROM `standardinstance`
		WHERE `standardinstance`.`status` = 0 
		AND `standardinstance`.`sid` = #{sId} 
		AND `standardinstance`.`Gid` = -1
  </select>
  <!-- 查询当前规格下全部规格值 -->
  <select id="queryAllStandardInstanceBySid" resultType="com.lmq.domain.Standardinstance">
  		SELECT * FROM `standardinstance`
		WHERE `standardinstance`.`status` = 0 
		AND `standardinstance`.`sid` = #{sId}
		AND `Gid` in (-1,#{gId}) 
  </select>
  
  <!-- 删除自定义规格值 -->
  <delete id="deleteByGid">
  		DELETE FROM `standardinstance`
		WHERE  `standardinstance`.`status` AND`standardinstance`.`Gid` = #{gId}
  </delete>
  
  <!-- 自定义规格值和对应的规格 -->
  <select id="queryStandardListByGid" resultMap="selfstandard">
  		SELECT `standardinstance`.*,`standard`.`Name` AS standardName,`standard`.`Id`AS standardId 
  		,`standard`.`Gid` AS standardGid
  		FROM `standardinstance`
		LEFT JOIN `standard` ON `standard`.id = `standardinstance`.`sid`
		WHERE standardinstance.`status` = 0 AND  `standard`.`status` = 0
		AND `standardinstance`.`Gid` = #{gId}
  </select>
  <resultMap type="com.lmq.domain.Standardinstance" id="selfstandard" extends="BaseResultMap">
  		<result column="standardName" property="standardName"/>
  		<result column="standardId" property="standardId"/>
  		<result column="standardGid" property="standardGid"/>
  </resultMap>
  <!-- 批量新增 -->
  <insert id="addStandardInByMap" >
  	INSERT INTO `standardinstance` ( `Name`, `sid`, `Gid` )
  	VALUES 
  	<foreach collection="standardList" item="s" separator="," >
  	(#{s.name},#{sId},-1)
  	</foreach>
  </insert>
  <!-- 批量改状态 -->
    <update id="updateStandardardStatus">
    UPDATE `standardinstance` SET `status` = 1
	WHERE `Id` IN
	( -100,
	<foreach collection="array" item="a" separator=",">
		#{a}
	</foreach>	
	)
    </update>
  <update id="updateStandardardStatusBySid">
    UPDATE `standardinstance` SET `status` = 1
	WHERE `sid` = #{sId}
    </update>
  
</mapper>