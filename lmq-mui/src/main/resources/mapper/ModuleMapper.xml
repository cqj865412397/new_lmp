<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.ModuleMapper">
  <resultMap id="BaseResultMap" type="com.lmq.domain.Module">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="enname" jdbcType="VARCHAR" property="enname" />
    <result column="catalog" jdbcType="INTEGER" property="catalog" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="funtype" jdbcType="INTEGER" property="funtype" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="fun" jdbcType="VARCHAR" property="fun" />
    <result column="Time" jdbcType="TIMESTAMP" property="time" />
    <result column="Parentid" jdbcType="INTEGER" property="parentid" />
    <result column="Status" jdbcType="INTEGER" property="status" />
    <result column="async" jdbcType="INTEGER" property="async" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="user1" jdbcType="VARCHAR" property="user1" />
    <result column="user2" jdbcType="VARCHAR" property="user2" />
    <result column="user3" jdbcType="VARCHAR" property="user3" />
    <result column="user4" jdbcType="VARCHAR" property="user4" />
    <result column="user5" jdbcType="VARCHAR" property="user5" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, name, enname, catalog, url, funtype, type, fun, Time, Parentid, Status, async, 
    uid, user1, user2, user3, user4, user5
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from module
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from module
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lmq.domain.Module">
    insert into module (Id, name, enname, 
      catalog, url, funtype, 
      type, fun, Time, 
      Parentid, Status, async, 
      uid, user1, user2, 
      user3, user4, user5
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{enname,jdbcType=VARCHAR}, 
      #{catalog,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{funtype,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{fun,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{parentid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{async,jdbcType=INTEGER}, 
      #{uid,jdbcType=VARCHAR}, #{user1,jdbcType=VARCHAR}, #{user2,jdbcType=VARCHAR}, 
      #{user3,jdbcType=VARCHAR}, #{user4,jdbcType=VARCHAR}, #{user5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lmq.domain.Module">
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="enname != null">
        enname,
      </if>
      <if test="catalog != null">
        catalog,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="funtype != null">
        funtype,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fun != null">
        fun,
      </if>
      <if test="time != null">
        Time,
      </if>
      <if test="parentid != null">
        Parentid,
      </if>
      <if test="status != null">
        Status,
      </if>
      <if test="async != null">
        async,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="user1 != null">
        user1,
      </if>
      <if test="user2 != null">
        user2,
      </if>
      <if test="user3 != null">
        user3,
      </if>
      <if test="user4 != null">
        user4,
      </if>
      <if test="user5 != null">
        user5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enname != null">
        #{enname,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null">
        #{catalog,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="funtype != null">
        #{funtype,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="fun != null">
        #{fun,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="user1 != null">
        #{user1,jdbcType=VARCHAR},
      </if>
      <if test="user2 != null">
        #{user2,jdbcType=VARCHAR},
      </if>
      <if test="user3 != null">
        #{user3,jdbcType=VARCHAR},
      </if>
      <if test="user4 != null">
        #{user4,jdbcType=VARCHAR},
      </if>
      <if test="user5 != null">
        #{user5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lmq.domain.Module">
    update module
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enname != null">
        enname = #{enname,jdbcType=VARCHAR},
      </if>
      <if test="catalog != null">
        catalog = #{catalog,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="funtype != null">
        funtype = #{funtype,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="fun != null">
        fun = #{fun,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        Time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="parentid != null">
        Parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="async != null">
        async = #{async,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="user1 != null">
        user1 = #{user1,jdbcType=VARCHAR},
      </if>
      <if test="user2 != null">
        user2 = #{user2,jdbcType=VARCHAR},
      </if>
      <if test="user3 != null">
        user3 = #{user3,jdbcType=VARCHAR},
      </if>
      <if test="user4 != null">
        user4 = #{user4,jdbcType=VARCHAR},
      </if>
      <if test="user5 != null">
        user5 = #{user5,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lmq.domain.Module">
    update module
    set name = #{name,jdbcType=VARCHAR},
      enname = #{enname,jdbcType=VARCHAR},
      catalog = #{catalog,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      funtype = #{funtype,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      fun = #{fun,jdbcType=VARCHAR},
      Time = #{time,jdbcType=TIMESTAMP},
      Parentid = #{parentid,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      async = #{async,jdbcType=INTEGER},
      uid = #{uid,jdbcType=VARCHAR},
      user1 = #{user1,jdbcType=VARCHAR},
      user2 = #{user2,jdbcType=VARCHAR},
      user3 = #{user3,jdbcType=VARCHAR},
      user4 = #{user4,jdbcType=VARCHAR},
      user5 = #{user5,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>