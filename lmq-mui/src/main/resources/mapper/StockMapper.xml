<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.StockMapper">
	<resultMap id="BaseResultMap" type="com.lmq.domain.Stock">
		<id column="Id" jdbcType="INTEGER" property="id" />
		<result column="Code" jdbcType="VARCHAR" property="code" />
		<result column="Allprice" jdbcType="DOUBLE" property="allprice" />
		<result column="Allcount" jdbcType="INTEGER"
			property="allcount" />
		<result column="Time" jdbcType="TIMESTAMP" property="time" />
		<result column="Sid" jdbcType="INTEGER" property="sid" />
		<result column="Supid" jdbcType="INTEGER" property="supid" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="async" jdbcType="INTEGER" property="async" />
		<result column="uid" jdbcType="VARCHAR" property="uid" />
		<result column="user1" jdbcType="VARCHAR" property="user1" />
		<result column="user2" jdbcType="VARCHAR" property="user2" />
		<result column="user3" jdbcType="VARCHAR" property="user3" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
		<result column="user6" jdbcType="VARCHAR" property="user6" />
		<result column="user7" jdbcType="VARCHAR" property="user7" />
		<result column="user8" jdbcType="VARCHAR" property="user8" />
		<result column="user9" jdbcType="VARCHAR" property="user9" />
		<result column="spname" jdbcType="VARCHAR" property="spname" />
		<result column="payname" jdbcType="VARCHAR" property="payname" />
	</resultMap>

	<resultMap type="com.lmq.domain.Stock" id="SSMap"
		extends="BaseResultMap">
		<collection property="stockdetails"
			ofType="com.lmq.domain.Stockdetail" column="id">
			<result column="sdcount" jdbcType="INTEGER" property="count" />
			<result column="sdsum" jdbcType="DOUBLE" property="sum" />
			<result column="sdprice" jdbcType="DOUBLE" property="price" />
			<result column="gname" jdbcType="VARCHAR" property="user1" />
			<result column="url" jdbcType="VARCHAR" property="url" />
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		Id, Code, Allprice, Allcount, Time, Sid, Supid, status,
		async, uid,
		user1, user2,
		user3, user4, user5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from stock
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from stock
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.lmq.domain.Stock">
		insert into stock (Id, `Code`,
		Allprice,
		Allcount, Time, Sid,
		Supid, status, async,
		uid, user1, user2,
		user3, user4, user5, user6, user7, user8, user9
		)
		values
		(#{id,jdbcType=INTEGER},
		#{code,jdbcType=VARCHAR},
		#{allprice,jdbcType=DOUBLE},
		#{allcount,jdbcType=INTEGER},
		NOW(),
		#{sid,jdbcType=INTEGER},
		#{supid,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{async,jdbcType=INTEGER},
		#{uid,jdbcType=VARCHAR},
		#{user1,jdbcType=VARCHAR},
		#{user2,jdbcType=VARCHAR},
		#{user3,jdbcType=VARCHAR},
		#{user4,jdbcType=VARCHAR},
		#{user5,jdbcType=VARCHAR},
		#{user6,jdbcType=VARCHAR},
		#{user7,jdbcType=VARCHAR},
		#{user8,jdbcType=VARCHAR},
		#{user9,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.lmq.domain.Stock" useGeneratedKeys="true"
		keyProperty="id">
		insert into stock
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="code != null">
				`Code`,
			</if>
			<if test="allprice != null">
				Allprice,
			</if>
			<if test="allcount != null">
				Allcount,
			</if>
			<if test="time == null">
				Time,
			</if>
			<if test="sid != null">
				Sid,
			</if>
			<if test="supid != null">
				Supid,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="async != null">
				async,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
			<if test="user6 != null">
				user6,
			</if>
			<if test="user7 != null">
				user7,
			</if>
			<if test="user8 != null">
				user8,
			</if>
			<if test="user9 != null">
				user9,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="allprice != null">
				#{allprice,jdbcType=DOUBLE},
			</if>
			<if test="allcount != null">
				#{allcount,jdbcType=INTEGER},
			</if>
			<if test="time == null">
				now(),
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="supid != null">
				#{supid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				#{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
			<if test="user6 != null">
				#{user6,jdbcType=VARCHAR},
			</if>
			<if test="user7 != null">
				#{user7,jdbcType=VARCHAR},
			</if>
			<if test="user8 != null">
				#{user8,jdbcType=VARCHAR},
			</if>
			<if test="user9 != null">
				#{user9,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lmq.domain.Stock">
		update stock
		<set>
			<if test="code != null">
				`Code` = #{code,jdbcType=VARCHAR},
			</if>
			<if test="allprice != null">
				Allprice = #{allprice,jdbcType=DOUBLE},
			</if>
			<if test="allcount != null">
				Allcount = #{allcount,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				Time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="sid != null">
				Sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="supid != null">
				Supid = #{supid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				async = #{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				user1 = #{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				user2 = #{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				user3 = #{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				user4 = #{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				user5 = #{user5,jdbcType=VARCHAR},
			</if>
			<if test="user6 != null">
				user6 = #{user6,jdbcType=VARCHAR},
			</if>
			<if test="user7 != null">
				user7 = #{user7,jdbcType=VARCHAR},
			</if>

			<if test="user8 != null">
				user8 = #{user8,jdbcType=VARCHAR},
			</if>
			<if test="user9 != null">
				user9 = #{user9,jdbcType=VARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lmq.domain.Stock">
		update stock
		set `Code` = #{code,jdbcType=VARCHAR},
		Allprice = #{allprice,jdbcType=DOUBLE},
		Allcount =
		#{allcount,jdbcType=INTEGER},
		Time = #{time,jdbcType=TIMESTAMP},
		Sid =
		#{sid,jdbcType=INTEGER},
		Supid = #{supid,jdbcType=INTEGER},
		status =
		#{status,jdbcType=INTEGER},
		async = #{async,jdbcType=INTEGER},
		uid =
		#{uid,jdbcType=VARCHAR},
		user1 = #{user1,jdbcType=VARCHAR},
		user2 =
		#{user2,jdbcType=VARCHAR},
		user3 = #{user3,jdbcType=VARCHAR},
		user4 =
		#{user4,jdbcType=VARCHAR},
		user5 = #{user5,jdbcType=VARCHAR},
		user6 =
		#{user6,jdbcType=VARCHAR},
		user7 = #{user7,jdbcType=VARCHAR},
		user8 =
		#{user8,jdbcType=VARCHAR},
		user9 = #{user9,jdbcType=VARCHAR}
		where Id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="queryList" resultMap="BaseResultMap">
		SELECT sk.`Id`,sk.`Allprice`,sp.`Name` as
		spname,sk.`Time`,sk.`Code`,sk.`user1` FROM
		`stock` AS sk INNER JOIN
		`supplier` AS sp ON sk.`Supid`=sp.`Id`
		where sk.`status`!=1 and
		DATE(sk.`user1`) BETWEEN
		#{startTime} AND
		#{endTime}
		and (
		sk.`Code` LIKE
		CONCAT('%',#{filtrate},'%') OR
		sp.`Name`
		LIKE
		CONCAT('%',#{filtrate},'%') )
		and sk.`sid`=#{sid}
		 ORDER BY sk.`time` DESC
		<!-- <if test=""> and DATE(s.`time`) BETWEEN '2018-11-14' AND '2018-11-14' 
			</if> <if test=""> and s.`SalesIndentNub` LIKE '%1%' OR st.`name` LIKE '%1%' 
			</if> -->
	</select>

	<select id="getTimeNum" resultType="String">
		SELECT
		MAX(RIGHT(`Code`,12))AS maxNub FROM
		`stock`
		WHERE `Code` LIKE
		CONCAT('%',#{uid},YEAR(NOW()),MONTH(NOW()),SUBSTR(NOW(),9,2),'%')
	</select>

	<!-- 批量删除 -->
	<delete id="deleteByIds">
		DELETE FROM `stock`
		WHERE `stock`.`status` = 0 AND `stock`.`Id` IN
		(
		<foreach collection="list" separator="," item="l">
			#{l}
		</foreach>
		)
	</delete>
	<select id="queryById" resultMap="SSMap">
		SELECT s.*, sup.`Name` AS
		spname,pt.`Name` AS payname,
		sd.`Goodsinstanceid` AS sdid,sd.`count`
		AS sdcount ,sd.`Price` AS sdprice,
		sd.`Sum` AS sdsum,sd.`user1` AS
		gname,i.`url`
		FROM stock s INNER JOIN stockdetail sd ON s.`Id`=sd.`Sid` AND
		s.id=#{id}
		LEFT JOIN supplier sup ON sup.`Id`=s.`Supid`
		LEFT JOIN paytype
		AS pt ON pt.`Id`=s.`user4`
		LEFT JOIN img i ON i.`Id`=sd.`Goodsinstanceid`
	</select>
</mapper>