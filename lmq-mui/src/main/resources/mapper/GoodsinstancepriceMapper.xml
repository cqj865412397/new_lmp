<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmq.dao.GoodsinstancepriceMapper">
	<resultMap id="BaseResultMap"
		type="com.lmq.domain.Goodsinstanceprice">
		<id column="Id" jdbcType="INTEGER" property="id" />
		<result column="Ptype" jdbcType="VARCHAR" property="ptype" />
		<result column="price" jdbcType="INTEGER" property="price" />
		<result column="goodsinstanceid" jdbcType="VARCHAR"
			property="goodsinstanceid" />
		<result column="Sid" jdbcType="INTEGER" property="sid" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="async" jdbcType="INTEGER" property="async" />
		<result column="uid" jdbcType="VARCHAR" property="uid" />
		<result column="user1" jdbcType="VARCHAR" property="user1" />
		<result column="user2" jdbcType="VARCHAR" property="user2" />
		<result column="user3" jdbcType="VARCHAR" property="user3" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, Ptype, price, goodsinstanceid, Sid, time, status,
		async, uid, user1,
		user2, user3,
		user4, user5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from goodsinstanceprice
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from goodsinstanceprice
		where Id =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.lmq.domain.Goodsinstanceprice">
		insert into goodsinstanceprice (Id, Ptype, price,
		goodsinstanceid, Sid, time,
		status, async, uid,
		user1, user2, user3,
		user4, user5)
		values (0,
		#{ptype,jdbcType=VARCHAR},
		#{price,jdbcType=INTEGER},
		#{goodsinstanceid,jdbcType=VARCHAR}, #{sid,jdbcType=INTEGER}, NOW(),
		#{status,jdbcType=INTEGER}, #{async,jdbcType=INTEGER},
		#{uid,jdbcType=VARCHAR},
		#{user1,jdbcType=VARCHAR},
		#{user2,jdbcType=VARCHAR}, #{user3,jdbcType=VARCHAR},
		#{user4,jdbcType=VARCHAR}, #{user5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.lmq.domain.Goodsinstanceprice">
		insert into goodsinstanceprice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="ptype != null">
				Ptype,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="goodsinstanceid != null">
				goodsinstanceid,
			</if>
			<if test="sid != null">
				Sid,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="async != null">
				async,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="ptype != null">
				#{ptype,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=INTEGER},
			</if>
			<if test="goodsinstanceid != null">
				#{goodsinstanceid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				#{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lmq.domain.Goodsinstanceprice">
		update goodsinstanceprice
		<set>
			<if test="ptype != null">
				Ptype = #{ptype,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=INTEGER},
			</if>
			<if test="goodsinstanceid != null">
				goodsinstanceid = #{goodsinstanceid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				Sid = #{sid,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="async != null">
				async = #{async,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="user1 != null">
				user1 = #{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				user2 = #{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				user3 = #{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				user4 = #{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				user5 = #{user5,jdbcType=VARCHAR},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lmq.domain.Goodsinstanceprice">
		update goodsinstanceprice
		set Ptype =
		#{ptype,jdbcType=VARCHAR},
		price = #{price,jdbcType=INTEGER},
		goodsinstanceid = #{goodsinstanceid,jdbcType=VARCHAR},
		Sid =
		#{sid,jdbcType=INTEGER},
		time = #{time,jdbcType=TIMESTAMP},
		status =
		#{status,jdbcType=INTEGER},
		async = #{async,jdbcType=INTEGER},
		uid =
		#{uid,jdbcType=VARCHAR},
		user1 = #{user1,jdbcType=VARCHAR},
		user2 =
		#{user2,jdbcType=VARCHAR},
		user3 = #{user3,jdbcType=VARCHAR},
		user4 =
		#{user4,jdbcType=VARCHAR},
		user5 = #{user5,jdbcType=VARCHAR}
		where Id =
		#{id,jdbcType=INTEGER}
	</update>

	<select id="queryPriceListByGid"
		resultType="com.lmq.domain.Goodsinstanceprice">
		SELECT goodsinstanceprice.`Id`AS
		priceTypeId,goodsinstanceprice.`Ptype`,goodsinstanceprice.`price`,`pricetype`.`Name`
		AS pName,`pricetype`.`Agio` AS `agio`
		FROM goodsinstance
		INNER JOIN `goodsinstanceprice` ON `goodsinstanceprice`.goodsinstanceid =
		`goodsinstance`.id#单品下多个价格
		LEFT JOIN `pricetype` ON `pricetype`.`Id` = goodsinstanceprice.`Ptype`
		WHERE goodsinstance.`status` = 0 AND goodsinstanceprice.`status` = 0 AND `pricetype`.`status` = 0 
		AND goodsinstance.`Id` = #{gInId}
		OR ISNULL(`pricetype`.`status`) = TRUE
	</select>
	
	
	<insert id="insertPrices">
		insert into goodsinstanceprice (Ptype, price,
		goodsinstanceid, Sid,
		time,
		status, async, uid,
		user1, user2, user3,
		user4, user5)
		values
		<foreach collection="list" item="p" separator=",">
			(#{p.ptype,jdbcType=VARCHAR},
			#{p.price,jdbcType=INTEGER},
			#{p.goodsinstanceid,jdbcType=VARCHAR}, #{p.sid,jdbcType=INTEGER},
			NOW(),
			#{p.status,jdbcType=INTEGER}, #{p.async,jdbcType=INTEGER},
			#{p.uid,jdbcType=VARCHAR},
			#{p.user1,jdbcType=VARCHAR},
			#{p.user2,jdbcType=VARCHAR}, #{p.user3,jdbcType=VARCHAR},
			#{p.user4,jdbcType=VARCHAR}, #{p.user5,jdbcType=VARCHAR})
		</foreach>

	</insert>
	
	<!-- 删除多个商品 -->
	<delete id="deleteByIds">
		DELETE FROM `goodsinstanceprice`
		WHERE `status` = 0 AND `goodsinstanceid` in
		(
		<foreach collection="list" separator="," item="l" >
			#{l}
		</foreach>
		)
	</delete>
	
	
	
	
</mapper>